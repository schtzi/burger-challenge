exit
@discount.empty?
@discount
exit
discount_data.keys[0]
discount_data.keys
discount_data
exit
@total_value
exit
@content.count { |b| b.name == promo_data['target'] && b.size == promo_data['target_size'] }
@content.count
@content
exit
File.read(order_file)
File.open(order_file)
order_file
exit
order_file_path
exit
order_file
exit
JSON.parse(order_file)
exit
JSON.parse(order_file)
order_file
exit
@data
data
exit
@data
data
exit
data
exit
@data
data
exit
(promo_data['from'] / promo_data['to'])
number_of_possible_promotions
exit
reduction
exit
(promo_data['from'] / promo_data['to'])
number_of_possible_promotions = relevant_count / promo_data['from']
promo_data['from']
relevant_count = count - (count % promo_data['from'])
count = 5
relevant_count = count - (count % promo_data['from'])
count = Burger.all.count { |b| b.name == promo_data['target'] && b.size == promo_data['target_size'] }
exit
reduction
exit
reduction * data.burgers[promo_data['target']] * data.size_multipliers[promo_data['target_size']]
reduction * data.burgers[promo_data['target']]
exit
order.total_value -= (reduction * data.burgers[promo_data['target']] * data.size_multipliers[promo_data['target_size']])
order.total_value
exit
(reduction * data.burgers[promo_data['target']])
order.total_value -= (reduction * data.burgers[promo_data['target']])
reduction
data.burgers[promo_data['target']]
exit
(1 - (discount_data['deduction_in_percent'] / 100.0))
discount_data['deduction_in_percent'] / 100
(1.0 - (discount_data['deduction_in_percent'] / 100))
1.0 - discount_data['deduction_in_percent'] / 100
exit
(1 - discount_data['deduction_in_percent'] / 100)
discount_data['deduction_in_percent']
order.total_value * (1 - discount_data['deduction_in_percent'] / 100)
exit
discount_data = data.discounts[order.discount].keys[0]
exit
discount_data.keys[0] = data.discounts[order.discount]
discount_data.key == deduction_in_percent
discount_data == deduction_in_percent
discount_data = data.discounts[order.discount]
data.discounts[order.discount]
exit
order.total_value
exit
order.total_value
order
exit
promo_data['target_size']
promo_data['target']
exit
burger.name == data.promotions[promo]['target'] && burger.size == data.promotions[promo]['size']
burger = Burger.all.last
Burger.all.last
b = Burger.all.last
exit
data.promotions[promo]['target']
data.promotions[promo][target]
exit
Burger.all.last.name
Burger.all
Burger.all.
Burger.all.first.name
Burger.all.first
Burger.first
exit
BurgerOrder.data
exit
data.discounts[order.discount]['deduction_in_percent']
data.discounts[order.discount].deduction_in_percent
data.discounts[order.discount].key
data.discounts[order.discount]
exit
order_data['discount_code']
order_data
order_data['discounts']
@discounts
exit
@data.size_multipliers
exit
@size_multipliers = content['size_multipliers']
conte@size_multipliers = content['size_multipliers']
content
@size_multipliers = content[:size_multipliers]
exit
@size_multipliers = content[:size_multipliers]
content
exit
a = Data.new
@data.size_multipliers
data.size_multipliers
exit
@data
@data.size_multipliers
@data.size_multiplier
exit
order.sum(&:extras_price)
exit
@content.count
@content
exit
self
exit
Order.first
Order.last
Order
order
exit
Order.all
@order
order
exit
order.first.extras_price
exit
order.first.extras_price
order.first.
order.first
order.sum { |item| item.extras_price }
order.sum
order
exit
@data['ingredients'][extra].nil?
@data['ingredients'].nil?
"a" if @data['ingredients'].nil?
exit
next
exit
counter
target
next
data_code['to']
target
counter
exit
data_code['from']
data['promotions']['from']
data['promotions']
data['promotions']['from']
target
counter
exit
(deduction / 100.0)
(deduction / 100)
    deduction = data['discounts'][order['discount_code']]['deduction_in_percent']
data['discounts'][order['discount_code']]['deduction_in_percent']
exit
data['discounts'][order['discount_code']]['deduction_in_percent']
data['discounts'][order['discount_code']]
exit
@@order
item.flatten[1]
item.flatten
item
@@order
item
item['size']
@@data['size_multipliers'][item][:size]
@@data['size_multipliers']
@@data
@@data['size_multipliers'][item['size']]
exit
burger[:extras_price]
burger
burger['extras_price']
exit
order['promotion_codes']
exit
order.flatten
order
order['promotion_codes']
order
order['promotion_codes']
exit
data['ingredients'][extra]
data['ingredients']
data['ingredients'][extra]
extra
data['ingredients'][extra]
exit
data['size_multipliers'][item['size']]
item['size']
data['size_multipliers'][item['name']['size']]
p item['price'] = data['burgers'][item['name']] * data['size_multipliers'][item['name']['size']]
exit
data['size_multipliers']['size']
exit
data['burgers'][item['name']]
data['burgers']['hamburger']
data
item['name']
[item['name']
exit
item['cheeseburger']
item['price'] = data['burgers'][item['name']] * data[item['size']]
exit
data
data[:burgers]
exit
item['name']
item[:name]
item
